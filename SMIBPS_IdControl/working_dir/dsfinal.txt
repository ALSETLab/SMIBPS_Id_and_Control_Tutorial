#1
char Aclass(3,32)
Adymosim
1.4
Final state generated by Dymosim


#    Experiment parameters
double experiment(7,1)
      15                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
      30                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
    1000                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(219,37)
Vt
Q
P
w
delta
stepEfd.height
stepEfd.y
stepEfd.offset
stepEfd.startTime
PS_ConstantEfd.SysData.S_b
PS_ConstantEfd.SysData.fn
PS_ConstantEfd.B1.V_b
PS_ConstantEfd.B1.V_0
PS_ConstantEfd.B1.angle_0
PS_ConstantEfd.B1.P_0
PS_ConstantEfd.B1.Q_0
PS_ConstantEfd.B1.S_b
PS_ConstantEfd.B1.fn
PS_ConstantEfd.B1.p.vr
PS_ConstantEfd.B1.p.vi
PS_ConstantEfd.B1.p.ir
PS_ConstantEfd.B1.p.ii
PS_ConstantEfd.B1.V
PS_ConstantEfd.B1.angle
PS_ConstantEfd.B1.displayPF
PS_ConstantEfd.B2.V_b
PS_ConstantEfd.B2.V_0
PS_ConstantEfd.B2.angle_0
PS_ConstantEfd.B2.P_0
PS_ConstantEfd.B2.Q_0
PS_ConstantEfd.B2.S_b
PS_ConstantEfd.B2.fn
PS_ConstantEfd.B2.p.vr
PS_ConstantEfd.B2.p.vi
PS_ConstantEfd.B2.p.ir
PS_ConstantEfd.B2.p.ii
PS_ConstantEfd.B2.V
PS_ConstantEfd.B2.angle
PS_ConstantEfd.B2.displayPF
PS_ConstantEfd.B3.V_b
PS_ConstantEfd.B3.V_0
PS_ConstantEfd.B3.angle_0
PS_ConstantEfd.B3.P_0
PS_ConstantEfd.B3.Q_0
PS_ConstantEfd.B3.S_b
PS_ConstantEfd.B3.fn
PS_ConstantEfd.B3.p.vr
PS_ConstantEfd.B3.p.vi
PS_ConstantEfd.B3.p.ir
PS_ConstantEfd.B3.p.ii
PS_ConstantEfd.B3.V
PS_ConstantEfd.B3.angle
PS_ConstantEfd.B3.displayPF
PS_ConstantEfd.transformer.p.ir
PS_ConstantEfd.transformer.p.ii
PS_ConstantEfd.transformer.n.ir
PS_ConstantEfd.transformer.n.ii
PS_ConstantEfd.transformer.Sb
PS_ConstantEfd.transformer.Sn
PS_ConstantEfd.transformer.V_b
PS_ConstantEfd.transformer.Vn
PS_ConstantEfd.transformer.fn
PS_ConstantEfd.transformer.kT
PS_ConstantEfd.transformer.x
PS_ConstantEfd.transformer.r
PS_ConstantEfd.transformer.Vb2new
PS_ConstantEfd.transformer.Vb2old
PS_ConstantEfd.transformer.xT
PS_ConstantEfd.transformer.rT
PS_ConstantEfd.line_1.p.ir
PS_ConstantEfd.line_1.p.ii
PS_ConstantEfd.line_1.n.ir
PS_ConstantEfd.line_1.n.ii
PS_ConstantEfd.line_1.R
PS_ConstantEfd.line_1.X
PS_ConstantEfd.line_1.G
PS_ConstantEfd.line_1.B
PS_ConstantEfd.line_1.S_b
PS_ConstantEfd.line_1.t1
PS_ConstantEfd.line_1.t2
PS_ConstantEfd.line_1.opening
PS_ConstantEfd.line_1.displayPF
PS_ConstantEfd.line_1.P12
PS_ConstantEfd.line_1.P21
PS_ConstantEfd.line_1.Q12
PS_ConstantEfd.line_1.Q21
PS_ConstantEfd.line_1.Y.re
PS_ConstantEfd.line_1.Y.im
PS_ConstantEfd.line_1.Z.re
PS_ConstantEfd.line_1.Z.im
PS_ConstantEfd.infinite_bus.V_b
PS_ConstantEfd.infinite_bus.V_0
PS_ConstantEfd.infinite_bus.angle_0
PS_ConstantEfd.infinite_bus.P_0
PS_ConstantEfd.infinite_bus.Q_0
PS_ConstantEfd.infinite_bus.S_b
PS_ConstantEfd.infinite_bus.fn
PS_ConstantEfd.infinite_bus.P
PS_ConstantEfd.infinite_bus.Q
PS_ConstantEfd.infinite_bus.p.ir
PS_ConstantEfd.infinite_bus.p.ii
PS_ConstantEfd.infinite_bus.displayPF
PS_ConstantEfd.line_2.p.ir
PS_ConstantEfd.line_2.p.ii
PS_ConstantEfd.line_2.n.ir
PS_ConstantEfd.line_2.n.ii
PS_ConstantEfd.line_2.R
PS_ConstantEfd.line_2.X
PS_ConstantEfd.line_2.G
PS_ConstantEfd.line_2.B
PS_ConstantEfd.line_2.S_b
PS_ConstantEfd.line_2.t1
PS_ConstantEfd.line_2.t2
PS_ConstantEfd.line_2.opening
PS_ConstantEfd.line_2.displayPF
PS_ConstantEfd.line_2.P12
PS_ConstantEfd.line_2.P21
PS_ConstantEfd.line_2.Q12
PS_ConstantEfd.line_2.Q21
PS_ConstantEfd.line_2.Y.re
PS_ConstantEfd.line_2.Y.im
PS_ConstantEfd.line_2.Z.re
PS_ConstantEfd.line_2.Z.im
PS_ConstantEfd.S_b
PS_ConstantEfd.G1.V_b
PS_ConstantEfd.G1.V_0
PS_ConstantEfd.G1.angle_0
PS_ConstantEfd.G1.P_0
PS_ConstantEfd.G1.Q_0
PS_ConstantEfd.G1.S_b
PS_ConstantEfd.G1.fn
PS_ConstantEfd.G1.machine.V_b
PS_ConstantEfd.G1.machine.V_0
PS_ConstantEfd.G1.machine.angle_0
PS_ConstantEfd.G1.machine.P_0
PS_ConstantEfd.G1.machine.Q_0
PS_ConstantEfd.G1.machine.S_b
PS_ConstantEfd.G1.machine.fn
PS_ConstantEfd.G1.machine.Sn
PS_ConstantEfd.G1.machine.Vn
PS_ConstantEfd.G1.machine.ra
PS_ConstantEfd.G1.machine.x1d
PS_ConstantEfd.G1.machine.M
PS_ConstantEfd.G1.machine.D
PS_ConstantEfd.G1.machine.delta
PS_ConstantEfd.G1.machine.der(delta)
PS_ConstantEfd.G1.machine.w
PS_ConstantEfd.G1.machine.der(w)
PS_ConstantEfd.G1.machine.vf
PS_ConstantEfd.G1.machine.pm
PS_ConstantEfd.G1.machine.anglev
PS_ConstantEfd.G1.machine.vd
PS_ConstantEfd.G1.machine.vq
PS_ConstantEfd.G1.machine.id
PS_ConstantEfd.G1.machine.iq
PS_ConstantEfd.G1.machine.pe
PS_ConstantEfd.G1.machine.vf_MB
PS_ConstantEfd.G1.machine.w_b
PS_ConstantEfd.G1.machine.S_SBtoMB
PS_ConstantEfd.G1.machine.I_MBtoSB
PS_ConstantEfd.G1.machine.V_MBtoSB
PS_ConstantEfd.G1.machine.Z_MBtoSB
PS_ConstantEfd.G1.machine.p0
PS_ConstantEfd.G1.machine.q0
PS_ConstantEfd.G1.machine.Vt0.re
PS_ConstantEfd.G1.machine.Vt0.im
PS_ConstantEfd.G1.machine.S0.re
PS_ConstantEfd.G1.machine.S0.im
PS_ConstantEfd.G1.machine.I0.re
PS_ConstantEfd.G1.machine.I0.im
PS_ConstantEfd.G1.machine.vr0
PS_ConstantEfd.G1.machine.vi0
PS_ConstantEfd.G1.machine.ir0
PS_ConstantEfd.G1.machine.ii0
PS_ConstantEfd.G1.machine.xq0
PS_ConstantEfd.G1.machine.delta0
PS_ConstantEfd.G1.machine.Vdq0.re
PS_ConstantEfd.G1.machine.Vdq0.im
PS_ConstantEfd.G1.machine.Idq0.re
PS_ConstantEfd.G1.machine.Idq0.im
PS_ConstantEfd.G1.machine.vd0
PS_ConstantEfd.G1.machine.vq0
PS_ConstantEfd.G1.machine.id0
PS_ConstantEfd.G1.machine.iq0
PS_ConstantEfd.G1.machine.pm00
PS_ConstantEfd.G1.machine.xd
PS_ConstantEfd.G1.machine.xq
PS_ConstantEfd.G1.machine.x1q
PS_ConstantEfd.G1.machine.x2d
PS_ConstantEfd.G1.machine.x2q
PS_ConstantEfd.G1.machine.T1d0
PS_ConstantEfd.G1.machine.T1q0
PS_ConstantEfd.G1.machine.T2d0
PS_ConstantEfd.G1.machine.T2q0
PS_ConstantEfd.G1.machine.Taa
PS_ConstantEfd.G1.machine.e1q
PS_ConstantEfd.G1.machine.der(e1q)
PS_ConstantEfd.G1.machine.e1d
PS_ConstantEfd.G1.machine.der(e1d)
PS_ConstantEfd.G1.machine.e2q
PS_ConstantEfd.G1.machine.der(e2q)
PS_ConstantEfd.G1.machine.e2d
PS_ConstantEfd.G1.machine.der(e2d)
PS_ConstantEfd.G1.machine.e2q0
PS_ConstantEfd.G1.machine.e2d0
PS_ConstantEfd.G1.machine.e1d0
PS_ConstantEfd.G1.machine.K1
PS_ConstantEfd.G1.machine.K2
PS_ConstantEfd.G1.machine.e1q0
PS_ConstantEfd.G1.machine.vf00
PS_ConstantEfd.G1.efdInputGain.k
PS_ConstantEfd.G1.efdInputGain.y
PS_ConstantEfd.G1.pmInputGain.k
PS_ConstantEfd.G1.pmInputGain.y
PS_ConstantEfd.uEfd
PS_ConstantEfd.uPm
efdInputGain.k
pmInputGain.k
Pmchange.k

double initialValue(219,6)
 -2  1.0045268890754668E+00  0  0  4   256   # Vt
 -2  4.4535560336228602E-01  0  0  4   256   # Q
 -2  9.0000186852114339E-01  0  0  4   256   # P
 -2  9.9999934101268173E-01  0  0  4   256   # w
 -2  1.2147187482129556E+00  0  0  4   256   # delta
 -1  1.0000000000000000E-02  0  0  1   280   # stepEfd.height
 -2  1.0000000000000000E-02  0  0  6   320   # stepEfd.y
 -1       0                  0  0  1   280   # stepEfd.offset
 -1       1                  0  0  1   280   # stepEfd.startTime
 -1    2220                  0  0  1   280   # PS_ConstantEfd.SysData.S_b
 -1      60                  0  0  1   280   # PS_ConstantEfd.SysData.fn
 -1     400                  0  0  1   280   # PS_ConstantEfd.B1.V_b
 -1       1                  0  0  1   280   # PS_ConstantEfd.B1.V_0
 -1       0                  0  0  1   280   # PS_ConstantEfd.B1.angle_0
 -1       1                  0  0  1   280   # PS_ConstantEfd.B1.P_0
 -1       0                  0  0  1   280   # PS_ConstantEfd.B1.Q_0
 -2    2220                  0  0  6   256   # PS_ConstantEfd.B1.S_b
 -2      60                  0  0  6   256   # PS_ConstantEfd.B1.fn
 -2  8.8526159779235614E-01  0  0  6   260   # PS_ConstantEfd.B1.p.vr
 -2  4.7474853801750672E-01  0  0  6   260   # PS_ConstantEfd.B1.p.vi
 -2       0                  0  0  6   388   # PS_ConstantEfd.B1.p.ir
 -2       0                  0  0  6   388   # PS_ConstantEfd.B1.p.ii
 -2  1.0045268890754668E+00  0  0  6   256   # PS_ConstantEfd.B1.V
 -2  2.8203791873598504E+01  0  0  6   256   # PS_ConstantEfd.B1.angle
 -1       1                  0  0  1   281   # PS_ConstantEfd.B1.displayPF
 -1     400                  0  0  1   280   # PS_ConstantEfd.B2.V_b
 -1       1                  0  0  1   280   # PS_ConstantEfd.B2.V_0
 -1       0                  0  0  1   280   # PS_ConstantEfd.B2.angle_0
 -1       1                  0  0  1   280   # PS_ConstantEfd.B2.P_0
 -1       0                  0  0  1   280   # PS_ConstantEfd.B2.Q_0
 -2    2220                  0  0  6   256   # PS_ConstantEfd.B2.S_b
 -2      60                  0  0  6   256   # PS_ConstantEfd.B2.fn
 -2  8.9016981305878673E-01  0  0  6   260   # PS_ConstantEfd.B2.p.vr
 -2  3.2488310548659394E-01  0  0  6   260   # PS_ConstantEfd.B2.p.vi
 -2       0                  0  0  6   388   # PS_ConstantEfd.B2.p.ir
 -2       0                  0  0  6   388   # PS_ConstantEfd.B2.p.ii
 -2  9.4760293810842977E-01  0  0  6   256   # PS_ConstantEfd.B2.V
 -2  2.0050442011830288E+01  0  0  6   256   # PS_ConstantEfd.B2.angle
 -1       1                  0  0  1   281   # PS_ConstantEfd.B2.displayPF
 -1     400                  0  0  1   280   # PS_ConstantEfd.B3.V_b
 -1       1                  0  0  1   280   # PS_ConstantEfd.B3.V_0
 -1       0                  0  0  1   280   # PS_ConstantEfd.B3.angle_0
 -1       1                  0  0  1   280   # PS_ConstantEfd.B3.P_0
 -1       0                  0  0  1   280   # PS_ConstantEfd.B3.Q_0
 -2    2220                  0  0  6   256   # PS_ConstantEfd.B3.S_b
 -2      60                  0  0  6   256   # PS_ConstantEfd.B3.fn
 -2  9.0081000000000000E-01  0  0  6   260   # PS_ConstantEfd.B3.p.vr
 -2       0                  0  0  6   260   # PS_ConstantEfd.B3.p.vi
 -2       0                  0  0  6   388   # PS_ConstantEfd.B3.p.ir
 -2       0                  0  0  6   388   # PS_ConstantEfd.B3.p.ii
 -2  9.0081000000000000E-01  0  0  6   256   # PS_ConstantEfd.B3.V
 -2       0                  0  0  6   256   # PS_ConstantEfd.B3.angle
 -1       1                  0  0  1   281   # PS_ConstantEfd.B3.displayPF
 -2  9.9910288353941834E-01  0  0  6   388   # PS_ConstantEfd.transformer.p.ir
 -2  3.2721435109537567E-02  0  0  6   388   # PS_ConstantEfd.transformer.p.ii
 -2 -9.9910288353941812E-01  0  0  6   388   # PS_ConstantEfd.transformer.n.ir
 -2 -3.2721435109537782E-02  0  0  6   388   # PS_ConstantEfd.transformer.n.ii
 -2    2220                  0  0  6   256   # PS_ConstantEfd.transformer.Sb
 -1    2220                  0  0  1   280   # PS_ConstantEfd.transformer.Sn
 -1     400                  0  0  1   280   # PS_ConstantEfd.transformer.V_b
 -1     400                  0  0  1   280   # PS_ConstantEfd.transformer.Vn
 -2      60                  0  0  6   256   # PS_ConstantEfd.transformer.fn
 -1       1                  0  0  1   280   # PS_ConstantEfd.transformer.kT
 -1  1.4999999999999999E-01  0  0  1   280   # PS_ConstantEfd.transformer.x
 -1       0                  0  0  1   280   # PS_ConstantEfd.transformer.r
 -2  1.6000000000000000E+05  0  0  6  1280   # PS_ConstantEfd.transformer.Vb2new
 -2  1.6000000000000000E+05  0  0  6  1280   # PS_ConstantEfd.transformer.Vb2old
 -2  1.4999999999999999E-01  0  0  6  1280   # PS_ConstantEfd.transformer.xT
 -2       0                  0  0  6  1280   # PS_ConstantEfd.transformer.rT
 -2  6.4976621097318810E-01  0  0  6   388   # PS_ConstantEfd.line_1.p.ir
 -2  2.1280373882426706E-02  0  0  6   388   # PS_ConstantEfd.line_1.p.ii
 -2 -6.4976621097318787E-01  0  0  6   388   # PS_ConstantEfd.line_1.n.ir
 -2 -2.1280373882426540E-02  0  0  6   388   # PS_ConstantEfd.line_1.n.ii
 -1       0                  0  0  1   280   # PS_ConstantEfd.line_1.R
 -1  5.0000000000000000E-01  0  0  1   280   # PS_ConstantEfd.line_1.X
 -1       0                  0  0  1   280   # PS_ConstantEfd.line_1.G
 -1       0                  0  0  1   280   # PS_ConstantEfd.line_1.B
 -2    2220                  0  0  6   256   # PS_ConstantEfd.line_1.S_b
 -2  9.9999999999999995E+59  0  0  6   256   # PS_ConstantEfd.line_1.t1
 -2  9.9999999999999995E+59  0  0  6   256   # PS_ConstantEfd.line_1.t2
 -2       1                  0  0  6   258   # PS_ConstantEfd.line_1.opening
 -1       0                  0  0  1   281   # PS_ConstantEfd.line_1.displayPF
 -2  1.2994012991250020E+03  0  0  6   256   # PS_ConstantEfd.line_1.P12
 -2  1.2994012991250015E+03  0  0  6   256   # PS_ConstantEfd.line_1.P21
 -2  4.2658391800547855E+02  0  0  6   256   # PS_ConstantEfd.line_1.Q12
 -2 -4.2556453385403607E+01  0  0  6   256   # PS_ConstantEfd.line_1.Q21
 -2       0                  0  0  6  1280   # PS_ConstantEfd.line_1.Y.re
 -2       0                  0  0  6  1280   # PS_ConstantEfd.line_1.Y.im
 -2       0                  0  0  6  1280   # PS_ConstantEfd.line_1.Z.re
 -2  5.0000000000000000E-01  0  0  6  1280   # PS_ConstantEfd.line_1.Z.im
 -1     400                  0  0  1   280   # PS_ConstantEfd.infinite_bus.V_b
 -1  9.0081000000000000E-01  0  0  1   280   # PS_ConstantEfd.infinite_bus.V_0
 -1       0                  0  0  1   280   # PS_ConstantEfd.infinite_bus.angle_0
 -1       1                  0  0  1   280   # PS_ConstantEfd.infinite_bus.P_0
 -1       0                  0  0  1   280   # PS_ConstantEfd.infinite_bus.Q_0
 -2    2220                  0  0  6   256   # PS_ConstantEfd.infinite_bus.S_b
 -2      60                  0  0  6   256   # PS_ConstantEfd.infinite_bus.fn
 -2 -1.9980041481169376E+03  0  0  6   256   # PS_ConstantEfd.infinite_bus.P
 -2 -6.5436267033470060E+01  0  0  6   256   # PS_ConstantEfd.infinite_bus.Q
 -2  9.9910288353941790E-01  0  0  6   388   # PS_ConstantEfd.infinite_bus.p.ir
 -2  3.2721435109537580E-02  0  0  6   388   # PS_ConstantEfd.infinite_bus.p.ii
 -1       0                  0  0  1   281   # PS_ConstantEfd.infinite_bus.displayPF
 -2  3.4933667256623008E-01  0  0  6   388   # PS_ConstantEfd.line_2.p.ir
 -2  1.1441061227111077E-02  0  0  6   388   # PS_ConstantEfd.line_2.p.ii
 -2 -3.4933667256623002E-01  0  0  6   388   # PS_ConstantEfd.line_2.n.ir
 -2 -1.1441061227111042E-02  0  0  6   388   # PS_ConstantEfd.line_2.n.ii
 -1       0                  0  0  1   280   # PS_ConstantEfd.line_2.R
 -1  9.3000000000000005E-01  0  0  1   280   # PS_ConstantEfd.line_2.X
 -1       0                  0  0  1   280   # PS_ConstantEfd.line_2.G
 -1       0                  0  0  1   280   # PS_ConstantEfd.line_2.B
 -2    2220                  0  0  6   256   # PS_ConstantEfd.line_2.S_b
 -2  9.9999999999999995E+59  0  0  6   256   # PS_ConstantEfd.line_2.t1
 -2  9.9999999999999995E+59  0  0  6   256   # PS_ConstantEfd.line_2.t2
 -2       1                  0  0  6   258   # PS_ConstantEfd.line_2.opening
 -1       0                  0  0  1   281   # PS_ConstantEfd.line_2.displayPF
 -2  6.9860284899193630E+02  0  0  6   256   # PS_ConstantEfd.line_2.P12
 -2  6.9860284899193607E+02  0  0  6   256   # PS_ConstantEfd.line_2.P21
 -2  2.2934619247606381E+02  0  0  6   256   # PS_ConstantEfd.line_2.Q12
 -2 -2.2879813648066452E+01  0  0  6   256   # PS_ConstantEfd.line_2.Q21
 -2       0                  0  0  6  1280   # PS_ConstantEfd.line_2.Y.re
 -2       0                  0  0  6  1280   # PS_ConstantEfd.line_2.Y.im
 -2       0                  0  0  6  1280   # PS_ConstantEfd.line_2.Z.re
 -2  9.3000000000000005E-01  0  0  6  1280   # PS_ConstantEfd.line_2.Z.im
 -2    2220                  0  0  6  1280   # PS_ConstantEfd.S_b
 -1     400                  0  0  1   280   # PS_ConstantEfd.G1.V_b
 -1       1                  0  0  1   280   # PS_ConstantEfd.G1.V_0
 -1  2.8342914462924622E+01  0  0  1   280   # PS_ConstantEfd.G1.angle_0
 -2  1.9979999999936397E+03  0  0  6   256   # PS_ConstantEfd.G1.P_0
 -2  9.6792496990658071E+02  0  0  6   256   # PS_ConstantEfd.G1.Q_0
 -2    2220                  0  0  6   256   # PS_ConstantEfd.G1.S_b
 -2      60                  0  0  6   256   # PS_ConstantEfd.G1.fn
 -2     400                  0  0  6   256   # PS_ConstantEfd.G1.machine.V_b
 -2       1                  0  0  6   256   # PS_ConstantEfd.G1.machine.V_0
 -2  2.8342914462924622E+01  0  0  6   256   # PS_ConstantEfd.G1.machine.angle_0
 -2  1.9979999999936397E+03  0  0  6   256   # PS_ConstantEfd.G1.machine.P_0
 -2  9.6792496990658071E+02  0  0  6   256   # PS_ConstantEfd.G1.machine.Q_0
 -2    2220                  0  0  6   256   # PS_ConstantEfd.G1.machine.S_b
 -2      60                  0  0  6   256   # PS_ConstantEfd.G1.machine.fn
 -1    2220                  0  0  1   280   # PS_ConstantEfd.G1.machine.Sn
 -1     400                  0  0  1   280   # PS_ConstantEfd.G1.machine.Vn
 -1  3.0000000000000001E-03  0  0  1   280   # PS_ConstantEfd.G1.machine.ra
 -1  2.9999999999999999E-01  0  0  1   280   # PS_ConstantEfd.G1.machine.x1d
 -1       7                  0  0  1   280   # PS_ConstantEfd.G1.machine.M
 -2       0                  0  0  6   256   # PS_ConstantEfd.G1.machine.D
 -2  1.2147187482129556E+00  0  0  2   272   # PS_ConstantEfd.G1.machine.delta
 -2 -2.4843236614608229E-04  0  0  3   256   # PS_ConstantEfd.G1.machine.der(delta)
 -2  9.9999934101268173E-01  0  0  2   272   # PS_ConstantEfd.G1.machine.w
 -2  8.4791397744358014E-08  0  0  3   256   # PS_ConstantEfd.G1.machine.der(w)
 -2  2.4307016420769232E+00  0  0  6   320   # PS_ConstantEfd.G1.machine.vf
 -2  9.0300029385356495E-01  0  0  6   256   # PS_ConstantEfd.G1.machine.pm
 -2  4.9224902974151430E-01  0  0  6   256   # PS_ConstantEfd.G1.machine.anglev
 -2  6.6423276507029094E-01  0  0  6   256   # PS_ConstantEfd.G1.machine.vd
 -2  7.5357090222666578E-01  0  0  6   256   # PS_ConstantEfd.G1.machine.vq
 -2  9.2502383667325405E-01  0  0  6   256   # PS_ConstantEfd.G1.machine.id
 -2  3.7895668063606086E-01  0  0  6   256   # PS_ConstantEfd.G1.machine.iq
 -2  9.0299970031378074E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.pe
 -2  2.4307016420769232E+00  0  0  6  1344   # PS_ConstantEfd.G1.machine.vf_MB
 -2  3.7699111843077515E+02  0  0  6  1280   # PS_ConstantEfd.G1.machine.w_b
 -2       1                  0  0  6  1280   # PS_ConstantEfd.G1.machine.S_SBtoMB
 -2       1                  0  0  6  1280   # PS_ConstantEfd.G1.machine.I_MBtoSB
 -2       1                  0  0  6  1280   # PS_ConstantEfd.G1.machine.V_MBtoSB
 -2       1                  0  0  6  1280   # PS_ConstantEfd.G1.machine.Z_MBtoSB
 -2  8.9999999999713498E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.p0
 -2  4.3600223869665800E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.q0
 -2  8.8012201512861510E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.Vt0.re
 -2  4.7474755237488669E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.Vt0.im
 -2  8.9999999999713498E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.S0.re
 -2 -4.3600223869665800E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.S0.im
 -2  9.9910080926444156E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.I0.re
 -2  4.3537628213747792E-02  0  0  6  1280   # PS_ConstantEfd.G1.machine.I0.im
 -2  8.8012201512861510E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.vr0
 -2  4.7474755237488669E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.vi0
 -2 -9.9910080926444156E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.ir0
 -2 -4.3537628213747792E-02  0  0  6  1280   # PS_ConstantEfd.G1.machine.ii0
 -2  1.7600000000000000E+00  0  0  6  1280   # PS_ConstantEfd.G1.machine.xq0
 -2  1.2242474644125019E+00  0  0  6  1280   # PS_ConstantEfd.G1.machine.delta0
 -2  6.6654936263136044E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.Vdq0.re
 -2  7.4546089580589481E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.Vdq0.im
 -2  9.2491704579850098E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.Idq0.re
 -2  3.8029779191406587E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.Idq0.im
 -2  6.6654936263136044E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.vd0
 -2  7.4546089580589481E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.vq0
 -2  9.2491704579850098E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.id0
 -2  3.8029779191406587E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.iq0
 -2  9.0300029385356495E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.pm00
 -1  1.8100000000000001E+00  0  0  1   280   # PS_ConstantEfd.G1.machine.xd
 -1  1.7600000000000000E+00  0  0  1   280   # PS_ConstantEfd.G1.machine.xq
 -1  6.5000000000000002E-01  0  0  1   280   # PS_ConstantEfd.G1.machine.x1q
 -1  2.3000000000000001E-01  0  0  1   280   # PS_ConstantEfd.G1.machine.x2d
 -1  2.5000000000000000E-01  0  0  1   280   # PS_ConstantEfd.G1.machine.x2q
 -1       8                  0  0  1   280   # PS_ConstantEfd.G1.machine.T1d0
 -1       1                  0  0  1   280   # PS_ConstantEfd.G1.machine.T1q0
 -1  2.9999999999999999E-02  0  0  1   280   # PS_ConstantEfd.G1.machine.T2d0
 -1  7.0000000000000007E-02  0  0  1   280   # PS_ConstantEfd.G1.machine.T2q0
 -1       0                  0  0  1   280   # PS_ConstantEfd.G1.machine.Taa
 -2  1.0362370526852160E+00  0  0  2   272   # PS_ConstantEfd.G1.machine.e1q
 -2  2.1179446825636550E-04  0  0  3   256   # PS_ConstantEfd.G1.machine.der(e1q)
 -2  4.0935719091085926E-01  0  0  2   272   # PS_ConstantEfd.G1.machine.e1d
 -2 -4.0250053070900460E-05  0  0  3   256   # PS_ConstantEfd.G1.machine.der(e1d)
 -2  9.6746325470342243E-01  0  0  2   272   # PS_ConstantEfd.G1.machine.e2q
 -2  2.1232279026941100E-04  0  0  3   256   # PS_ConstantEfd.G1.machine.der(e2q)
 -2  5.7226866642129548E-01  0  0  2   272   # PS_ConstantEfd.G1.machine.e2d
 -2 -5.4694396752129138E-05  0  0  3   256   # PS_ConstantEfd.G1.machine.der(e2d)
 -2  9.5933270971529216E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.e2q0
 -2  5.7424966579023939E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.e2d0
 -2  4.1076549578164273E-01  0  0  6  1280   # PS_ConstantEfd.G1.machine.e1d0
 -2  1.5056587500000000E+00  0  0  6  1280   # PS_ConstantEfd.G1.machine.K1
 -2  7.4341249999999984E-02  0  0  6  1280   # PS_ConstantEfd.G1.machine.K2
 -2  1.0280921990462599E+00  0  0  6  1280   # PS_ConstantEfd.G1.machine.e1q0
 -2  2.4207016420769234E+00  0  0  6  1280   # PS_ConstantEfd.G1.machine.vf00
 -1      -1                  0  0  1   280   # PS_ConstantEfd.G1.efdInputGain.k
 -2 -2.4207016420769234E+00  0  0  6   256   # PS_ConstantEfd.G1.efdInputGain.y
 -1      -1                  0  0  1   280   # PS_ConstantEfd.G1.pmInputGain.k
 -2 -9.0300029385356495E-01  0  0  6   256   # PS_ConstantEfd.G1.pmInputGain.y
 -2  1.0000000000000000E-02  0  0  6   320   # PS_ConstantEfd.uEfd
 -2       0                  0  0  6   256   # PS_ConstantEfd.uPm
 -1       1                  0  0  1   280   # efdInputGain.k
 -1       1                  0  0  1   280   # pmInputGain.k
 -1       0                  0  0  1   280   # Pmchange.k


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(219,57)
[1]
[1]
[1]
[1]
[rad]
Height of step
Connector of Real output signal
Offset of output signal y
Output y = offset for time < startTime [s]
System base [MVA]
System Frequency [Hz]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage [1]
Imaginary part of the voltage [1]
Real part of the current [1]
Imaginary part of the current [1]
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage [1]
Imaginary part of the voltage [1]
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Real part of the current [1]
Imaginary part of the current [1]
Real part of the current
Imaginary part of the current
System base power (MVA) [MVA]
Power rating (MVA)
Sending end bus voltage (kV)
Voltage rating (kV)
Frequency rating (Hz) [Hz]
Nominal tap ratio (kV1/kV2)
Reactance (pu machine base)
Resistance (pu machine base)


Reactance, p.u system base
Resistance, p.u system base
Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Active Power absorbed by the Infinite bus (MW)
Reactive Power absorbed by the Infinite bus (MVAr)
Real part of the current
Imaginary part of the current
Display power flow results: [:#(type=Boolean)]
Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
[MVA]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Power rating (MVA) [MVA]
Voltage rating (kV) [kV]
Armature resistance (pu) [1]
d-axis transient reactance (pu) [1]
Mechanical starting time (2H), kWs/kVA
Damping coefficient
Rotor angle (rad) [rad|rad]
der(Rotor angle (rad)) [rad/s]
Rotor speed (pu) [1]
der(Rotor speed (pu)) [s-1]
Field voltage (pu) [1]
Mechanical power (pu) [1]
 Bus voltage angle (rad) [rad|deg]
d-axis voltage (pu) [1]
q-axis voltage (pu) [1]
d-axis currrent (pu) [1]
q-axis current (pu) [1]
electrical power transmitted through the air-gap [1]
field voltage on machine base [1]
Base frequency in rad/s [rad/s]
S(system base) -> S(machine base) [1]
I(machine base) -> I(system base) [1]
V(machine base) -> V(system base) [1]
Z(machine base) -> Z(system base) [1]
Initial active power generation in pu (system base) [1]
Initial reactive power generation in pu (system base) [1]
Real part of complex number
Imaginary part of complex number
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number
Imaginary part of complex number
Init. val. [1]
Init. val. [1]
Init. val. [1]
Init. val. [1]
used for setting the initial rotor angle [1]
Init. val. rotor angle [rad|deg]
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Init. val. [1]
Init. val. [1]
Init. val. [1]
Init. val. [1]
Init. val. (pu, system base) [1]
d-axis synchronous reactance (pu) [1]
q-axis synchronous reactance (pu) [1]
q-axis transient reactance (pu) [1]
d-axis sub-transient reactance (pu) [1]
q-axis sub-transient reactance (pu) [1]
d-axis open circuit transient time constant (s)
q-axis open circuit transient time constant (s)
d-axis open circuit transient time constant (s)
q-axis open circuit transient time constant (s)
d-axis aditional leakage time constant (s)
q-axis transient voltage [1]
der(q-axis transient voltage) [s-1]
d-axis transient voltage [1]
der(d-axis transient voltage) [s-1]
q-axis sub-transient voltage [1]
der(q-axis sub-transient voltage) [s-1]
d-axis sub-transient voltage [1]
der(d-axis sub-transient voltage) [s-1]
Initialitation [1]
Initialitation [1]
[1]
[1]
[1]
[1]
Init. val. (pu, SB) [1]
Gain value multiplied with input signal [1]
Output signal connector [1]
Gain value multiplied with input signal [1]
Output signal connector [1]
[1]
[1]
Gain value multiplied with input signal [1]
Gain value multiplied with input signal [1]
Constant output value

